import tkinter as tk
import random
from models.word_model import WordModel
from views.word_view import WordView

class WordController:
    def __init__(self):
        self.model = WordModel()
        self.root = tk.Tk()
        self.view = WordView(self.root, self)


    # M√©todo para preguntar las palabras              
    def ask_words(self, topic):
        print("asdf")

    def run(self):
        while True:
            print("\n----- Pr√°ctica de ingl√©s -----")
            print("1. Practicar un tema")
            print("2. Ver topics disponibles")
            print("3. A√±adir un nuevo t√≥pic")
            print("0. Salir")
            
            option = input("Elige una opci√≥n: ")
            
            match option:
                # 1. Practicar un tema
                case "1":
                    # Muestro todos los topics, y con el topic elegido llamo al m√©todo que comprueba las palabras
                    print(self.model.get_all_topis())
                    
                    topic_chose = input("Con que topic quieres jugar: ")
                    palabras = self.model.get_word_by_topic(topic_chose)
                    
                    # Creo un diccionario clave valor y le asigno las palabras del topic
                    palabras_topic = {}
                    for row in palabras:
                        palabras_topic[row['word']] = row['meaning']
                    
                    # Mientras haya palabras obt√©n una aleatoria y compara si el valor de esa clave aleatoria es la que acierta el usuario
                    while palabras_topic.items():
                        
                        guess = random.choice(list(palabras_topic.keys()))
                        user_try = input(f"Que significa {guess}: ")
                        # Compruebo la palabra que a√±ade el usuario con el value del t√≥pic
                        if user_try.lower() == palabras_topic[guess]:
                            # Como acabo de acertar elimino una palabra de la lista y compruebo si ya termin√©
                            del palabras_topic[guess]
                            if len(palabras_topic) == 0:
                                print("Felicidades! Has terminado el t√≥pic!")
                            else:
                                print(f"‚úÖ Correcto!!! Una menos, te quedan: {len(palabras_topic)}")
                        else:
                            print(f"‚ùå La respuesta correcta era: {palabras_topic[guess]}")
                # 2. Ver topics disponibles
                case "2":
                    # Enumero todos los temas disponibles si los hay
                    topics = self.model.get_all_topis()
                    if topics:
                        print("TOPICS: ")
                        for t in topics:
                            print(f"- {t}")
                    else:
                        print("No hay temas a√∫n! ‚ö†Ô∏è")
                # 3. A√±adir un nuevo t√≥pic
                case "3":
                    # Pido el t√≥pic y luego voy pidiendo palabras e introduci√©ndolas
                    name_topic = input("Nombre del t√≥pic: ").strip()
                    
                    while True:
                        
                        name_word = input("Nueva palabra: ").strip()
                        name_meaning = input("Significado: ").strip()
                        
                        correcto = input(f"{name_word} se traduce como {name_meaning} (si/no): ").strip()
                        if correcto.lower() == "si":
                            self.model.add_word(name_word, name_meaning, name_topic)
                            print(f"‚úÖ Palabra a√±adida")
                        else:
                            print("‚ùå Vuelve a escribir la palabra:")
                            
                        # Preguntar si continuar
                        continuar = input("Quieres continuar introduciendo palabras (si/no): ").strip()
                        if continuar != "si":
                            print("Finalizando entrada de palabras...")
                            break
                # 0. Salir
                case "0":
                    print("Saliendo...üíÄ")
                    break
                case _:
                    print("Escoge una de las opciones v√°lidas! ‚ùå‚ùå‚ùå")